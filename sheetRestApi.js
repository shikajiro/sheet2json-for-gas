// Generated by CoffeeScript 1.3.3
(function() {
  var createJson, getJson, postJson;

  createJson = function(appId, sheetName) {
    var c, cell, column, culumnName, dataRange, json, r, record, row, sheet, spreadsheet, table, _i, _j, _len, _len1, _ref;
    spreadsheet = SpreadsheetApp.openById(appId);
    sheet = spreadsheet.getSheetByName(sheetName);
    dataRange = sheet.getDataRange().getValues();
    culumnName = (function() {
      var _i, _len, _ref, _results;
      _ref = dataRange[0];
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        column = _ref[_i];
        _results.push(column);
      }
      return _results;
    })();
    table = [];
    for (r = _i = 0, _len = dataRange.length; _i < _len; r = ++_i) {
      row = dataRange[r];
      record = {};
      _ref = row.slice(1, row.length + 1 || 9e9);
      for (c = _j = 0, _len1 = _ref.length; _j < _len1; c = ++_j) {
        cell = _ref[c];
        record[culumnName[c]] = cell;
      }
      table.push(record);
    }
    json = Utilities.jsonStringify(table);
    Logger.log(json);
    return json;
  };

  getJson = function(req) {
    var appId, output, sheetName;
    appId = req.parameters.app_id;
    sheetName = req.parameters.sheet_name;
    output = ContentService.createTextOutput();
    output.setMimeType(ContentService.MimeType.JSON);
    output.setContent(createJson(appId, sheetName));
    return output;
  };

  postJson = function(req) {
    return Logger.log(req);
  };

  function onOpen() { createJson(); };


  function doGet(req) { Logger.log(req); return getJson(req); };


  function doPost(req) { Logger.log(req); return postJson(req); };


}).call(this);
